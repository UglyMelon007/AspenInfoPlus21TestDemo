!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AG_DBL_AVG	.\infoplus21_api.cs	/^        public const short AG_DBL_AVG  =   47 ;\/* average                                         *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_DBL_GOOD	.\infoplus21_api.cs	/^        public const short AG_DBL_GOOD  =  41 ;\/* good values                                     *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_DBL_MAX	.\infoplus21_api.cs	/^        public const short AG_DBL_MAX   =  44 ;\/* maximum                                         *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_DBL_MIN	.\infoplus21_api.cs	/^        public const short AG_DBL_MIN   =  43 ;\/* minimum                                         *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_DBL_NG	.\infoplus21_api.cs	/^        public const short AG_DBL_NG   =   42 ;\/* not good values                                 *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_DBL_RNG	.\infoplus21_api.cs	/^        public const short AG_DBL_RNG   =  45 ;\/* range                                           *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_DBL_STD	.\infoplus21_api.cs	/^        public const short AG_DBL_STD  =   49 ;\/* standard deviation                              *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_DBL_SUM	.\infoplus21_api.cs	/^        public const short AG_DBL_SUM  =   46 ;\/* sum                                             *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_DBL_VAR	.\infoplus21_api.cs	/^        public const short AG_DBL_VAR  =   48 ;\/* variance                                        *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_SHRT_QLEVEL	.\infoplus21_api.cs	/^        public const short AG_SHRT_QLEVEL = 81;\/* quality "level" for period                      *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_TIME_AFTER	.\infoplus21_api.cs	/^        public const short AG_TIME_AFTER = 24 ;\/* time after end of period (start of next period) *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_TIME_END	.\infoplus21_api.cs	/^        public const short AG_TIME_END   = 23 ;\/* time at end of period                           *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_TIME_MIDDLE	.\infoplus21_api.cs	/^        public const short AG_TIME_MIDDLE =22 ;\/* time at middle of period                        *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AG_TIME_START	.\infoplus21_api.cs	/^        public const short AG_TIME_START = 21 ;\/\/* time at beginning of period                     *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
AggreationData	.\AggreationData.cs	/^        public AggreationData() {$/;"	m	class:RTDB.IP21.AggreationData	access:public	signature:()
AggreationData	.\AggreationData.cs	/^        public AggreationData(double min, double avg, double max, double sum) {$/;"	m	class:RTDB.IP21.AggreationData	access:public	signature:(double min, double avg, double max, double sum)
AggreationData	.\AggreationData.cs	/^    public class AggreationData {$/;"	c	namespace:RTDB.IP21	access:public
AggreationData	.\TimeAggreationPair.cs	/^        public AggreationData AggreationData { get; set; }$/;"	p	class:RTDB.IP21.TimeAggreationPair	access:public
AggreationReader	.\AggreationReader.cs	/^    internal class AggreationReader {$/;"	c	namespace:RTDB.IP21
AggregatedData	.\AggregatedData.cs	/^    internal abstract class AggregatedData$/;"	c	namespace:RTDB.IP21
AggregatedDouble	.\AggregatedDouble.cs	/^    internal class AggregatedDouble : AggregatedData$/;"	c	namespace:RTDB.IP21	inherits:AggregatedData
AggregatedShort	.\AggregatedShort.cs	/^    internal class AggregatedShort : AggregatedData$/;"	c	namespace:RTDB.IP21	inherits:AggregatedData
AggregatedTime	.\AggregatedTime.cs	/^    internal class AggregatedTime : AggregatedData$/;"	c	namespace:RTDB.IP21	inherits:AggregatedData
AllocBuffer	.\AggregatedData.cs	/^        public IntPtr AllocBuffer(int maxPeriods)$/;"	m	class:RTDB.IP21.AggregatedData	access:public	signature:(int maxPeriods)
AllocBuffer	.\Field.cs	/^        public IntPtr AllocBuffer(int size)$/;"	m	class:RTDB.IP21.Field	access:public	signature:(int size)
AllocMyBuffer	.\AggregatedData.cs	/^        protected abstract object AllocMyBuffer();$/;"	m	class:RTDB.IP21.AggregatedData	access:protected	signature:()
AllocMyBuffer	.\AggregatedDouble.cs	/^        protected override object AllocMyBuffer()$/;"	m	class:RTDB.IP21.AggregatedDouble	access:protected	signature:()
AllocMyBuffer	.\AggregatedShort.cs	/^        protected override object AllocMyBuffer()$/;"	m	class:RTDB.IP21.AggregatedShort	access:protected	signature:()
AllocMyBuffer	.\AggregatedTime.cs	/^        protected override object AllocMyBuffer()$/;"	m	class:RTDB.IP21.AggregatedTime	access:protected	signature:()
AllocMyBuffer	.\DoubleField.cs	/^        protected override object AllocMyBuffer()$/;"	m	class:RTDB.IP21.DoubleField	access:protected	signature:()
AllocMyBuffer	.\Field.cs	/^        protected abstract object AllocMyBuffer();$/;"	m	class:RTDB.IP21.Field	access:protected	signature:()
AllocMyBuffer	.\TimeField.cs	/^        protected override object AllocMyBuffer()$/;"	m	class:RTDB.IP21.TimeField	access:protected	signature:()
Avg	.\AggreationData.cs	/^        public double Avg { get; set; }$/;"	p	class:RTDB.IP21.AggreationData	access:public
C_FALSE	.\infoplus21_api.cs	/^        public const int C_FALSE = 0; \/*false value for c*\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
C_TRUE	.\infoplus21_api.cs	/^        public const int C_TRUE = 1; \/* true value for c*\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
CheckResult	.\Util.cs	/^        public static void CheckResult(infoplus21_api.ERRBLOCK errMsg)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(infoplus21_api.ERRBLOCK errMsg)
Close	.\Connection.cs	/^        public void Close() {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:()
CloseAllConnection	.\RtdbConnectionFactory.cs	/^        public void CloseAllConnection() {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	access:public	signature:()
Codes	.\AggregatedData.cs	/^        public short[] Codes$/;"	p	class:RTDB.IP21.AggregatedData	access:public
Connection	.\Connection.cs	/^        private Connection(string serverIp)$/;"	m	class:RTDB.IP21.Connection	file:	access:private	signature:(string serverIp)
Connection	.\Connection.cs	/^    public class Connection$/;"	c	namespace:RTDB.IP21	access:public
CreateData	.\AggregatedData.cs	/^        public static AggregatedData CreateData(Type type)$/;"	m	class:RTDB.IP21.AggregatedData	access:public	signature:(Type type)
CreateField	.\Field.cs	/^        public static Field CreateField(string name)$/;"	m	class:RTDB.IP21.Field	access:public	signature:(string name)
DB2CHBF	.\infoplus21_api.cs	/^        public static extern void DB2CHBF(int tagId, int propertyId,byte[] ptdbfr,int numbytes,out ERRBLOCK errMsg); $/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int tagId, int propertyId,byte[] ptdbfr,int numbytes,out ERRBLOCK errMsg)
DB2REAL	.\infoplus21_api.cs	/^        public static extern void DB2REAL(int tagId, int propertyId, out float Value, out ERRBLOCK errMsg);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int tagId, int propertyId, out float Value, out ERRBLOCK errMsg)
DB2XTIM	.\infoplus21_api.cs	/^        public static extern void DB2XTIM(int tagId, int propertyId, out XTSBLOCK xtsdata, out ERRBLOCK errMsg); $/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int tagId, int propertyId, out XTSBLOCK xtsdata, out ERRBLOCK errMsg)
DBTimeReader	.\DBTimeReader.cs	/^    public class DBTimeReader {$/;"	c	namespace:RTDB.IP21	access:public
DECODFT	.\infoplus21_api.cs	/^        public static extern void DECODFT(byte[] property, short propertyLength, out int propertyId, out ERRBLOCK errMsg);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(byte[] property, short propertyLength, out int propertyId, out ERRBLOCK errMsg)
DECODNAM	.\infoplus21_api.cs	/^        public static extern void DECODNAM(byte[] tag, short tagLength, out int tagId, out ERRBLOCK errMsg);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(byte[] tag, short tagLength, out int tagId, out ERRBLOCK errMsg)
DOUBLE	.\AggregatedData.cs	/^        public enum Type {DOUBLE, TIME, SHORT};$/;"	e	enum:RTDB.IP21.AggregatedData.Type	file:
DTYPDUBL	.\infoplus21_api.cs	/^        public const int DTYPDUBL = -6;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
DTYPREAL	.\infoplus21_api.cs	/^        public const int DTYPREAL = -5;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
DTYPTIME	.\infoplus21_api.cs	/^        public const int DTYPTIME = -7;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
DTYPUSTS	.\infoplus21_api.cs	/^        public const int DTYPUSTS = -17; \/* Defined by XUSTS structure *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
DTYPXTIM	.\infoplus21_api.cs	/^        public const int DTYPXTIM = -8; \/* Defined by XTSBLOCK structure *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
DaAddServer	.\infoplus21_api.cs	/^        public static extern int DaAddServer(byte[] constring, out ERRBLOCK errMsg);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(byte[] constring, out ERRBLOCK errMsg)
DaInitialize	.\infoplus21_api.cs	/^        public static extern int DaInitialize(int login);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int login)
DaSelectServer	.\infoplus21_api.cs	/^        public static extern int DaSelectServer(int ServerIndex, out ERRBLOCK ErrorBlock);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int ServerIndex, out ERRBLOCK ErrorBlock)
DaShutdown	.\infoplus21_api.cs	/^        public static extern void DaShutdown();$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:()
DataAt	.\AggregatedData.cs	/^        public object DataAt(int period, short code)$/;"	m	class:RTDB.IP21.AggregatedData	access:public	signature:(int period, short code)
DataAt	.\DoubleField.cs	/^        public override object DataAt(int index)$/;"	m	class:RTDB.IP21.DoubleField	access:public	signature:(int index)
DataAt	.\Field.cs	/^        public abstract object DataAt(int index);$/;"	m	class:RTDB.IP21.Field	access:public	signature:(int index)
DataAt	.\TimeField.cs	/^        public override object DataAt(int index)$/;"	m	class:RTDB.IP21.TimeField	access:public	signature:(int index)
DataType	.\DoubleField.cs	/^        public override short DataType$/;"	p	class:RTDB.IP21.DoubleField	access:public
DataType	.\Field.cs	/^        public abstract short DataType$/;"	p	class:RTDB.IP21.Field	access:public
DataType	.\TimeField.cs	/^        public override short DataType$/;"	p	class:RTDB.IP21.TimeField	access:public
DoubleField	.\DoubleField.cs	/^        public DoubleField(string name)$/;"	m	class:RTDB.IP21.DoubleField	access:public	signature:(string name)
DoubleField	.\DoubleField.cs	/^    internal class DoubleField : Field$/;"	c	namespace:RTDB.IP21	inherits:Field
ERR1	.\infoplus21_api.cs	/^            public long ERR1;$/;"	f	struct:RTDB.IP21.infoplus21_api.ERRBLOCK	access:public
ERR2	.\infoplus21_api.cs	/^            public long ERR2;$/;"	f	struct:RTDB.IP21.infoplus21_api.ERRBLOCK	access:public
ERRBLOCK	.\infoplus21_api.cs	/^        public struct ERRBLOCK$/;"	s	class:RTDB.IP21.infoplus21_api	access:public
ERRCODE	.\infoplus21_api.cs	/^            public short ERRCODE;   \/* Error code returned by ACCESS routines *\/$/;"	f	struct:RTDB.IP21.infoplus21_api.ERRBLOCK	access:public
ERRMESS	.\infoplus21_api.cs	/^        public static extern void ERRMESS(ref ERRBLOCK errMsg, byte[] err, out int errsz);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(ref ERRBLOCK errMsg, byte[] err, out int errsz)
Err1	.\IP21Exception.cs	/^        public long Err1$/;"	p	class:RTDB.IP21.IP21Exception	access:public
Err2	.\IP21Exception.cs	/^        public long Err2$/;"	p	class:RTDB.IP21.IP21Exception	access:public
ErrCode	.\IP21Exception.cs	/^        public short ErrCode$/;"	p	class:RTDB.IP21.IP21Exception	access:public
ErrorMessage	.\Util.cs	/^        private static string ErrorMessage(infoplus21_api.ERRBLOCK errMsg)$/;"	m	class:RTDB.IP21.Util	file:	access:private	signature:(infoplus21_api.ERRBLOCK errMsg)
Field	.\Field.cs	/^        public Field(string name)$/;"	m	class:RTDB.IP21.Field	access:public	signature:(string name)
Field	.\Field.cs	/^    internal abstract class Field$/;"	c	namespace:RTDB.IP21
FieldId	.\Util.cs	/^        public static int FieldId(string fieldName)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(string fieldName)
FreeBuffer	.\AggregatedData.cs	/^        public void FreeBuffer()$/;"	m	class:RTDB.IP21.AggregatedData	access:public	signature:()
FreeBuffer	.\Field.cs	/^        public void FreeBuffer()$/;"	m	class:RTDB.IP21.Field	access:public	signature:()
GETDBXTIM	.\infoplus21_api.cs	/^        public static extern void GETDBXTIM(out XTSBLOCK current_xts);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(out XTSBLOCK current_xts)
GetActuals	.\Connection.cs	/^        public double GetActuals(string tag, DateTime time, int span) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime time, int span)
GetAggreagedData	.\AggreationReader.cs	/^        static public Dictionary<string, string> GetAggreagedData(IList tags, DateTime timeOld, DateTime timeNew, short doubleCode) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(IList tags, DateTime timeOld, DateTime timeNew, short doubleCode)
GetAggreagedData	.\AggreationReader.cs	/^        static public IList<TimeValuePair> GetAggreagedData(string tag, DateTime timeOld, DateTime timeNew, int interval, short doubleCode) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval, short doubleCode)
GetAggreagedData	.\AggreationReader.cs	/^        static public double GetAggreagedData(string tag, DateTime timeOld, DateTime timeNew, short doubleCode) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, short doubleCode)
GetAveragedData	.\Connection.cs	/^        public Dictionary<string, string> GetAveragedData(IList tags, DateTime timeOld, DateTime timeNew) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(IList tags, DateTime timeOld, DateTime timeNew)
GetAveragedData	.\Connection.cs	/^        public IList<TimeValuePair> GetAveragedData(string tag, DateTime timeOld, DateTime timeNew, int interval) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval)
GetAveragedData	.\Connection.cs	/^        public double GetAveragedData(string tag, DateTime timeOld, DateTime timeNew) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew)
GetAveragedDataFor	.\Connection.cs	/^        public double  GetAveragedDataFor(string tag, DateTime timeOld, DateTime timeNew)$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew)
GetAveragedDataSTD	.\Connection.cs	/^        public double GetAveragedDataSTD(string tag, DateTime timeOld, DateTime timeNew)$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew)
GetAveragedSTD	.\Connection.cs	/^        public Dictionary<string, string> GetAveragedSTD(IList tags, DateTime timeOld, DateTime timeNew)$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(IList tags, DateTime timeOld, DateTime timeNew)
GetConnection	.\RtdbConnectionFactory.cs	/^        public Connection GetConnection() {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	access:public	signature:()
GetConnection	.\RtdbConnectionFactory.cs	/^        public Connection GetConnection(string serverIp) {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	access:public	signature:(string serverIp)
GetCurrentData	.\Connection.cs	/^        public Dictionary<string, string> GetCurrentData(IList tags) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(IList tags)
GetCurrentData	.\Connection.cs	/^        public IList<TimeValuePair> GetCurrentData(string tag, DateTime timeOld, DateTime timeNew, int interval) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval)
GetCurrentData	.\Connection.cs	/^        public IList<TimeValuePair> GetCurrentData(string tag, DateTime timeOld, DateTime timeNew, string interval)$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, string interval)
GetDailyAverage	.\AggreationReader.cs	/^        static public double GetDailyAverage(string tag, DateTime date)$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime date)
GetDailyAverage	.\Connection.cs	/^        public double GetDailyAverage(string tag, DateTime date) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime date)
GetDailyMax	.\AggreationReader.cs	/^        static public double GetDailyMax(string tag, DateTime date) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime date)
GetDailyMax	.\Connection.cs	/^        public double GetDailyMax(string tag, DateTime date) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime date)
GetDailyMin	.\AggreationReader.cs	/^        static public double GetDailyMin(string tag, DateTime date) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime date)
GetDailyMin	.\Connection.cs	/^        public double GetDailyMin(string tag, DateTime date) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime date)
GetInterpolated	.\Connection.cs	/^        public double GetInterpolated(string tag, DateTime time) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime time)
GetMaxData	.\Connection.cs	/^        public double GetMaxData(string tag, DateTime timeOld, DateTime timeNew) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew)
GetMaxMinAvgAtOnce	.\AggreationReader.cs	/^        static public IList<TimeAggreationPair> GetMaxMinAvgAtOnce(string tag, DateTime timeOld, DateTime timeNew, int interval) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval)
GetMaxMinAvgAtOnce	.\Connection.cs	/^        public IList<TimeAggreationPair> GetMaxMinAvgAtOnce(string tag, DateTime timeOld, DateTime timeNew, int interval) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval)
GetMinData	.\Connection.cs	/^        public double GetMinData(string tag, DateTime timeOld, DateTime timeNew) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew)
GetNumValue	.\Connection.cs	/^        public Single GetNumValue(string tag, string property) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, string property)
GetRTDBCurrentTime	.\DBTimeReader.cs	/^        public static DateTime GetRTDBCurrentTime() {$/;"	m	class:RTDB.IP21.DBTimeReader	access:public	signature:()
GetRtdbConnectionFactory	.\RtdbConnectionFactory.cs	/^        public static RtdbConnectionFactory GetRtdbConnectionFactory() {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	access:public	signature:()
GetStringValue	.\Connection.cs	/^        public string GetStringValue(string tag, string property) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, string property)
GetValue	.\Connection.cs	/^        public Single GetValue(string tag) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag)
H21_GET_ACTUALS	.\infoplus21_api.cs	/^        public const int H21_GET_ACTUALS = 4;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
H21_GET_ACTUALS_AND_CURRENT	.\infoplus21_api.cs	/^        public const int H21_GET_ACTUALS_AND_CURRENT = 5;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
H21_GET_BEST_FIT	.\infoplus21_api.cs	/^        public const int H21_GET_BEST_FIT = 3;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
H21_GET_TIMES	.\infoplus21_api.cs	/^        public const int H21_GET_TIMES = 1;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
H21_GET_TIMES2	.\infoplus21_api.cs	/^        public const int H21_GET_TIMES2 = 2;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
H21_GET_TIMES2_EXTENDED	.\infoplus21_api.cs	/^        public const int H21_GET_TIMES2_EXTENDED = 7;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
H21_GET_TIMES_EXTENDED	.\infoplus21_api.cs	/^        public const int H21_GET_TIMES_EXTENDED = 6;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
HistoryReader	.\HistoryReader.cs	/^    internal class HistoryReader$/;"	c	namespace:RTDB.IP21
INISETC	.\infoplus21_api.cs	/^        public static extern bool INISETC();$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:()
IP21Exception	.\IP21Exception.cs	/^        public IP21Exception(string msg) : base(msg)$/;"	m	class:RTDB.IP21.IP21Exception	access:public	signature:(string msg)
IP21Exception	.\IP21Exception.cs	/^    public class IP21Exception : Exception$/;"	c	namespace:RTDB.IP21	inherits:Exception	access:public
Id	.\Field.cs	/^        public int Id$/;"	p	class:RTDB.IP21.Field	access:public
Init	.\Connection.cs	/^        private void Init()$/;"	m	class:RTDB.IP21.Connection	file:	access:private	signature:()
ListActuals	.\Connection.cs	/^        public IList<TimeValuePair> ListActuals(string tag, DateTime time, int span) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime time, int span)
ListAllHistory	.\HistoryReader.cs	/^        public static IList<TimeValuePair> ListAllHistory(int mode, string tag, DateTime time, int span)$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(int mode, string tag, DateTime time, int span)
ListHistoryData	.\HistoryReader.cs	/^        public static IList<TimeValuePair> ListHistoryData(int mode, string tag, DateTime time, int span, int maxOccus)$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(int mode, string tag, DateTime time, int span, int maxOccus)
ListHistoryDataByInterval	.\HistoryReader.cs	/^        public static IList<TimeValuePair> ListHistoryDataByInterval(string tag, DateTime timeOld, DateTime timeNew, int interval) {$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval)
ListHistoryDataByInterval	.\HistoryReader.cs	/^        public static IList<TimeValuePair> ListHistoryDataByInterval(string tag, DateTime timeOld, DateTime timeNew, string IP21PeriodInterval)$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, string IP21PeriodInterval)
ListInterpolated	.\Connection.cs	/^        public IList<TimeValuePair> ListInterpolated(string tag, DateTime time, int span) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime time, int span)
Max	.\AggreationData.cs	/^        public double Max { get; set; }$/;"	p	class:RTDB.IP21.AggreationData	access:public
MaxPeriods	.\AggregatedData.cs	/^        public int MaxPeriods$/;"	p	class:RTDB.IP21.AggregatedData	access:public
Min	.\AggreationData.cs	/^        public double Min { get; set; }$/;"	p	class:RTDB.IP21.AggreationData	access:public
MyDataAt	.\AggregatedData.cs	/^        protected abstract object MyDataAt(int codeIndex, int period);$/;"	m	class:RTDB.IP21.AggregatedData	access:protected	signature:(int codeIndex, int period)
MyDataAt	.\AggregatedDouble.cs	/^        protected override object MyDataAt(int period, int index)$/;"	m	class:RTDB.IP21.AggregatedDouble	access:protected	signature:(int period, int index)
MyDataAt	.\AggregatedShort.cs	/^        protected override object MyDataAt(int period, int index)$/;"	m	class:RTDB.IP21.AggregatedShort	access:protected	signature:(int period, int index)
MyDataAt	.\AggregatedTime.cs	/^        protected override object MyDataAt(int period, int index)$/;"	m	class:RTDB.IP21.AggregatedTime	access:protected	signature:(int period, int index)
Name	.\Field.cs	/^        public string Name$/;"	p	class:RTDB.IP21.Field	access:public
OpenConnection	.\Connection.cs	/^        public static Connection OpenConnection(string serverIp)$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string serverIp)
RHIS21AGGREG	.\infoplus21_api.cs	/^        public static extern void RHIS21AGGREG(int timeweight, int step, int recid, int ft, ref XUSTS ptTimeOld, ref XUSTS ptTimeNew, ref XUSTS ptInterval, int timealign, int dsadjust, int maxperiods, int numtimecodes, int numdoublecodes, int numshortcodes, short[] timecodes, short[] doublecodes, short[] shortcodes, IntPtr timevalues, IntPtr doublevalues, IntPtr shortvalues, out int numperiods, out ERRBLOCK err); $/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int timeweight, int step, int recid, int ft, ref XUSTS ptTimeOld, ref XUSTS ptTimeNew, ref XUSTS ptInterval, int timealign, int dsadjust, int maxperiods, int numtimecodes, int numdoublecodes, int numshortcodes, short[] timecodes, short[] doublecodes, short[] shortcodes, IntPtr timevalues, IntPtr doublevalues, IntPtr shortvalues, out int numperiods, out ERRBLOCK err)
RHIS21DATA	.\infoplus21_api.cs	/^        public static extern void RHIS21DATA(int mode, int step, int outSiders, int tagId, int propertyId, ref XUSTS startTime, ref XUSTS endTime, int numfts, int[] fts, short[] datatypes, int maxoccus, int[] keylevels, XUSTS[] keyTimes, IntPtr[] ptdatas, out int occsok, out int ftsok, out ERRBLOCK errMsg);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int mode, int step, int outSiders, int tagId, int propertyId, ref XUSTS startTime, ref XUSTS endTime, int numfts, int[] fts, short[] datatypes, int maxoccus, int[] keylevels, XUSTS[] keyTimes, IntPtr[] ptdatas, out int occsok, out int ftsok, out ERRBLOCK errMsg)
RTDB.IP21	.\AggreationData.cs	/^namespace RTDB.IP21 {$/;"	n
RTDB.IP21	.\AggreationReader.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\AggregatedData.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\AggregatedDouble.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\AggregatedShort.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\AggregatedTime.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\Connection.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\DBTimeReader.cs	/^namespace RTDB.IP21 {$/;"	n
RTDB.IP21	.\DoubleField.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\Field.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\HistoryReader.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\IP21Exception.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\RtdbConnectionFactory.cs	/^namespace RTDB.IP21 {$/;"	n
RTDB.IP21	.\TimeAggreationPair.cs	/^namespace RTDB.IP21 {$/;"	n
RTDB.IP21	.\TimeField.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\TimeValuePair.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\Util.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21	.\infoplus21_api.cs	/^namespace RTDB.IP21$/;"	n
RTDB.IP21.AggreationData	.\AggreationData.cs	/^    public class AggreationData {$/;"	c	namespace:RTDB.IP21	access:public
RTDB.IP21.AggreationData.AggreationData	.\AggreationData.cs	/^        public AggreationData() {$/;"	m	class:RTDB.IP21.AggreationData	access:public	signature:()
RTDB.IP21.AggreationData.AggreationData	.\AggreationData.cs	/^        public AggreationData(double min, double avg, double max, double sum) {$/;"	m	class:RTDB.IP21.AggreationData	access:public	signature:(double min, double avg, double max, double sum)
RTDB.IP21.AggreationData.Avg	.\AggreationData.cs	/^        public double Avg { get; set; }$/;"	p	class:RTDB.IP21.AggreationData	access:public
RTDB.IP21.AggreationData.Max	.\AggreationData.cs	/^        public double Max { get; set; }$/;"	p	class:RTDB.IP21.AggreationData	access:public
RTDB.IP21.AggreationData.Min	.\AggreationData.cs	/^        public double Min { get; set; }$/;"	p	class:RTDB.IP21.AggreationData	access:public
RTDB.IP21.AggreationData.Sum	.\AggreationData.cs	/^        public double Sum { get; set; }$/;"	p	class:RTDB.IP21.AggreationData	access:public
RTDB.IP21.AggreationReader	.\AggreationReader.cs	/^    internal class AggreationReader {$/;"	c	namespace:RTDB.IP21
RTDB.IP21.AggreationReader.GetAggreagedData	.\AggreationReader.cs	/^        static public Dictionary<string, string> GetAggreagedData(IList tags, DateTime timeOld, DateTime timeNew, short doubleCode) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(IList tags, DateTime timeOld, DateTime timeNew, short doubleCode)
RTDB.IP21.AggreationReader.GetAggreagedData	.\AggreationReader.cs	/^        static public IList<TimeValuePair> GetAggreagedData(string tag, DateTime timeOld, DateTime timeNew, int interval, short doubleCode) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval, short doubleCode)
RTDB.IP21.AggreationReader.GetAggreagedData	.\AggreationReader.cs	/^        static public double GetAggreagedData(string tag, DateTime timeOld, DateTime timeNew, short doubleCode) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, short doubleCode)
RTDB.IP21.AggreationReader.GetDailyAverage	.\AggreationReader.cs	/^        static public double GetDailyAverage(string tag, DateTime date)$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime date)
RTDB.IP21.AggreationReader.GetDailyMax	.\AggreationReader.cs	/^        static public double GetDailyMax(string tag, DateTime date) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime date)
RTDB.IP21.AggreationReader.GetDailyMin	.\AggreationReader.cs	/^        static public double GetDailyMin(string tag, DateTime date) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime date)
RTDB.IP21.AggreationReader.GetMaxMinAvgAtOnce	.\AggreationReader.cs	/^        static public IList<TimeAggreationPair> GetMaxMinAvgAtOnce(string tag, DateTime timeOld, DateTime timeNew, int interval) {$/;"	m	class:RTDB.IP21.AggreationReader	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval)
RTDB.IP21.AggreationReader.RTDB_REFRESH_STEP	.\AggreationReader.cs	/^        private const int RTDB_REFRESH_STEP = 15;$/;"	f	class:RTDB.IP21.AggreationReader	file:	access:private
RTDB.IP21.AggregatedData	.\AggregatedData.cs	/^    internal abstract class AggregatedData$/;"	c	namespace:RTDB.IP21
RTDB.IP21.AggregatedData.AllocBuffer	.\AggregatedData.cs	/^        public IntPtr AllocBuffer(int maxPeriods)$/;"	m	class:RTDB.IP21.AggregatedData	access:public	signature:(int maxPeriods)
RTDB.IP21.AggregatedData.AllocMyBuffer	.\AggregatedData.cs	/^        protected abstract object AllocMyBuffer();$/;"	m	class:RTDB.IP21.AggregatedData	access:protected	signature:()
RTDB.IP21.AggregatedData.Codes	.\AggregatedData.cs	/^        public short[] Codes$/;"	p	class:RTDB.IP21.AggregatedData	access:public
RTDB.IP21.AggregatedData.CreateData	.\AggregatedData.cs	/^        public static AggregatedData CreateData(Type type)$/;"	m	class:RTDB.IP21.AggregatedData	access:public	signature:(Type type)
RTDB.IP21.AggregatedData.DataAt	.\AggregatedData.cs	/^        public object DataAt(int period, short code)$/;"	m	class:RTDB.IP21.AggregatedData	access:public	signature:(int period, short code)
RTDB.IP21.AggregatedData.FreeBuffer	.\AggregatedData.cs	/^        public void FreeBuffer()$/;"	m	class:RTDB.IP21.AggregatedData	access:public	signature:()
RTDB.IP21.AggregatedData.MaxPeriods	.\AggregatedData.cs	/^        public int MaxPeriods$/;"	p	class:RTDB.IP21.AggregatedData	access:public
RTDB.IP21.AggregatedData.MyDataAt	.\AggregatedData.cs	/^        protected abstract object MyDataAt(int codeIndex, int period);$/;"	m	class:RTDB.IP21.AggregatedData	access:protected	signature:(int codeIndex, int period)
RTDB.IP21.AggregatedData.Type	.\AggregatedData.cs	/^        public enum Type {DOUBLE, TIME, SHORT};$/;"	g	class:RTDB.IP21.AggregatedData	access:public
RTDB.IP21.AggregatedData.buffer	.\AggregatedData.cs	/^        protected object buffer;$/;"	f	class:RTDB.IP21.AggregatedData	access:protected
RTDB.IP21.AggregatedData.bufferHandle	.\AggregatedData.cs	/^        private GCHandle bufferHandle;$/;"	f	class:RTDB.IP21.AggregatedData	file:	access:private
RTDB.IP21.AggregatedData.codes	.\AggregatedData.cs	/^        private short[] codes;$/;"	f	class:RTDB.IP21.AggregatedData	file:	access:private
RTDB.IP21.AggregatedData.maxPeriods	.\AggregatedData.cs	/^        private int maxPeriods;$/;"	f	class:RTDB.IP21.AggregatedData	file:	access:private
RTDB.IP21.AggregatedDouble	.\AggregatedDouble.cs	/^    internal class AggregatedDouble : AggregatedData$/;"	c	namespace:RTDB.IP21	inherits:AggregatedData
RTDB.IP21.AggregatedDouble.AllocMyBuffer	.\AggregatedDouble.cs	/^        protected override object AllocMyBuffer()$/;"	m	class:RTDB.IP21.AggregatedDouble	access:protected	signature:()
RTDB.IP21.AggregatedDouble.MyDataAt	.\AggregatedDouble.cs	/^        protected override object MyDataAt(int period, int index)$/;"	m	class:RTDB.IP21.AggregatedDouble	access:protected	signature:(int period, int index)
RTDB.IP21.AggregatedShort	.\AggregatedShort.cs	/^    internal class AggregatedShort : AggregatedData$/;"	c	namespace:RTDB.IP21	inherits:AggregatedData
RTDB.IP21.AggregatedShort.AllocMyBuffer	.\AggregatedShort.cs	/^        protected override object AllocMyBuffer()$/;"	m	class:RTDB.IP21.AggregatedShort	access:protected	signature:()
RTDB.IP21.AggregatedShort.MyDataAt	.\AggregatedShort.cs	/^        protected override object MyDataAt(int period, int index)$/;"	m	class:RTDB.IP21.AggregatedShort	access:protected	signature:(int period, int index)
RTDB.IP21.AggregatedTime	.\AggregatedTime.cs	/^    internal class AggregatedTime : AggregatedData$/;"	c	namespace:RTDB.IP21	inherits:AggregatedData
RTDB.IP21.AggregatedTime.AllocMyBuffer	.\AggregatedTime.cs	/^        protected override object AllocMyBuffer()$/;"	m	class:RTDB.IP21.AggregatedTime	access:protected	signature:()
RTDB.IP21.AggregatedTime.MyDataAt	.\AggregatedTime.cs	/^        protected override object MyDataAt(int period, int index)$/;"	m	class:RTDB.IP21.AggregatedTime	access:protected	signature:(int period, int index)
RTDB.IP21.Connection	.\Connection.cs	/^    public class Connection$/;"	c	namespace:RTDB.IP21	access:public
RTDB.IP21.Connection.Close	.\Connection.cs	/^        public void Close() {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:()
RTDB.IP21.Connection.Connection	.\Connection.cs	/^        private Connection(string serverIp)$/;"	m	class:RTDB.IP21.Connection	file:	access:private	signature:(string serverIp)
RTDB.IP21.Connection.GetActuals	.\Connection.cs	/^        public double GetActuals(string tag, DateTime time, int span) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime time, int span)
RTDB.IP21.Connection.GetAveragedData	.\Connection.cs	/^        public Dictionary<string, string> GetAveragedData(IList tags, DateTime timeOld, DateTime timeNew) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(IList tags, DateTime timeOld, DateTime timeNew)
RTDB.IP21.Connection.GetAveragedData	.\Connection.cs	/^        public IList<TimeValuePair> GetAveragedData(string tag, DateTime timeOld, DateTime timeNew, int interval) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval)
RTDB.IP21.Connection.GetAveragedData	.\Connection.cs	/^        public double GetAveragedData(string tag, DateTime timeOld, DateTime timeNew) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew)
RTDB.IP21.Connection.GetAveragedDataFor	.\Connection.cs	/^        public double  GetAveragedDataFor(string tag, DateTime timeOld, DateTime timeNew)$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew)
RTDB.IP21.Connection.GetAveragedDataSTD	.\Connection.cs	/^        public double GetAveragedDataSTD(string tag, DateTime timeOld, DateTime timeNew)$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew)
RTDB.IP21.Connection.GetAveragedSTD	.\Connection.cs	/^        public Dictionary<string, string> GetAveragedSTD(IList tags, DateTime timeOld, DateTime timeNew)$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(IList tags, DateTime timeOld, DateTime timeNew)
RTDB.IP21.Connection.GetCurrentData	.\Connection.cs	/^        public Dictionary<string, string> GetCurrentData(IList tags) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(IList tags)
RTDB.IP21.Connection.GetCurrentData	.\Connection.cs	/^        public IList<TimeValuePair> GetCurrentData(string tag, DateTime timeOld, DateTime timeNew, int interval) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval)
RTDB.IP21.Connection.GetCurrentData	.\Connection.cs	/^        public IList<TimeValuePair> GetCurrentData(string tag, DateTime timeOld, DateTime timeNew, string interval)$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, string interval)
RTDB.IP21.Connection.GetDailyAverage	.\Connection.cs	/^        public double GetDailyAverage(string tag, DateTime date) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime date)
RTDB.IP21.Connection.GetDailyMax	.\Connection.cs	/^        public double GetDailyMax(string tag, DateTime date) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime date)
RTDB.IP21.Connection.GetDailyMin	.\Connection.cs	/^        public double GetDailyMin(string tag, DateTime date) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime date)
RTDB.IP21.Connection.GetInterpolated	.\Connection.cs	/^        public double GetInterpolated(string tag, DateTime time) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime time)
RTDB.IP21.Connection.GetMaxData	.\Connection.cs	/^        public double GetMaxData(string tag, DateTime timeOld, DateTime timeNew) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew)
RTDB.IP21.Connection.GetMaxMinAvgAtOnce	.\Connection.cs	/^        public IList<TimeAggreationPair> GetMaxMinAvgAtOnce(string tag, DateTime timeOld, DateTime timeNew, int interval) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval)
RTDB.IP21.Connection.GetMinData	.\Connection.cs	/^        public double GetMinData(string tag, DateTime timeOld, DateTime timeNew) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew)
RTDB.IP21.Connection.GetNumValue	.\Connection.cs	/^        public Single GetNumValue(string tag, string property) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, string property)
RTDB.IP21.Connection.GetStringValue	.\Connection.cs	/^        public string GetStringValue(string tag, string property) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, string property)
RTDB.IP21.Connection.GetValue	.\Connection.cs	/^        public Single GetValue(string tag) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag)
RTDB.IP21.Connection.Init	.\Connection.cs	/^        private void Init()$/;"	m	class:RTDB.IP21.Connection	file:	access:private	signature:()
RTDB.IP21.Connection.ListActuals	.\Connection.cs	/^        public IList<TimeValuePair> ListActuals(string tag, DateTime time, int span) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime time, int span)
RTDB.IP21.Connection.ListInterpolated	.\Connection.cs	/^        public IList<TimeValuePair> ListInterpolated(string tag, DateTime time, int span) {$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string tag, DateTime time, int span)
RTDB.IP21.Connection.OpenConnection	.\Connection.cs	/^        public static Connection OpenConnection(string serverIp)$/;"	m	class:RTDB.IP21.Connection	access:public	signature:(string serverIp)
RTDB.IP21.Connection.ServerIndex	.\Connection.cs	/^        public int ServerIndex$/;"	p	class:RTDB.IP21.Connection	access:public
RTDB.IP21.Connection.SwitchToServerIp	.\Connection.cs	/^        private bool SwitchToServerIp() {$/;"	m	class:RTDB.IP21.Connection	file:	access:private	signature:()
RTDB.IP21.Connection.currentServerIp	.\Connection.cs	/^        private static string currentServerIp;$/;"	f	class:RTDB.IP21.Connection	file:	access:private
RTDB.IP21.Connection.serverGroup	.\Connection.cs	/^        public static string serverGroup = "200";$/;"	f	class:RTDB.IP21.Connection	access:public
RTDB.IP21.Connection.serverIndex	.\Connection.cs	/^        private int serverIndex;$/;"	f	class:RTDB.IP21.Connection	file:	access:private
RTDB.IP21.Connection.serverIp	.\Connection.cs	/^        private string serverIp;$/;"	f	class:RTDB.IP21.Connection	file:	access:private
RTDB.IP21.Connection.serverPool	.\Connection.cs	/^        private static Dictionary<string, int> serverPool = new Dictionary<string, int>();$/;"	f	class:RTDB.IP21.Connection	file:	access:private
RTDB.IP21.DBTimeReader	.\DBTimeReader.cs	/^    public class DBTimeReader {$/;"	c	namespace:RTDB.IP21	access:public
RTDB.IP21.DBTimeReader.GetRTDBCurrentTime	.\DBTimeReader.cs	/^        public static DateTime GetRTDBCurrentTime() {$/;"	m	class:RTDB.IP21.DBTimeReader	access:public	signature:()
RTDB.IP21.DoubleField	.\DoubleField.cs	/^    internal class DoubleField : Field$/;"	c	namespace:RTDB.IP21	inherits:Field
RTDB.IP21.DoubleField.AllocMyBuffer	.\DoubleField.cs	/^        protected override object AllocMyBuffer()$/;"	m	class:RTDB.IP21.DoubleField	access:protected	signature:()
RTDB.IP21.DoubleField.DataAt	.\DoubleField.cs	/^        public override object DataAt(int index)$/;"	m	class:RTDB.IP21.DoubleField	access:public	signature:(int index)
RTDB.IP21.DoubleField.DataType	.\DoubleField.cs	/^        public override short DataType$/;"	p	class:RTDB.IP21.DoubleField	access:public
RTDB.IP21.DoubleField.DoubleField	.\DoubleField.cs	/^        public DoubleField(string name)$/;"	m	class:RTDB.IP21.DoubleField	access:public	signature:(string name)
RTDB.IP21.Field	.\Field.cs	/^    internal abstract class Field$/;"	c	namespace:RTDB.IP21
RTDB.IP21.Field.AllocBuffer	.\Field.cs	/^        public IntPtr AllocBuffer(int size)$/;"	m	class:RTDB.IP21.Field	access:public	signature:(int size)
RTDB.IP21.Field.AllocMyBuffer	.\Field.cs	/^        protected abstract object AllocMyBuffer();$/;"	m	class:RTDB.IP21.Field	access:protected	signature:()
RTDB.IP21.Field.CreateField	.\Field.cs	/^        public static Field CreateField(string name)$/;"	m	class:RTDB.IP21.Field	access:public	signature:(string name)
RTDB.IP21.Field.DataAt	.\Field.cs	/^        public abstract object DataAt(int index);$/;"	m	class:RTDB.IP21.Field	access:public	signature:(int index)
RTDB.IP21.Field.DataType	.\Field.cs	/^        public abstract short DataType$/;"	p	class:RTDB.IP21.Field	access:public
RTDB.IP21.Field.Field	.\Field.cs	/^        public Field(string name)$/;"	m	class:RTDB.IP21.Field	access:public	signature:(string name)
RTDB.IP21.Field.FreeBuffer	.\Field.cs	/^        public void FreeBuffer()$/;"	m	class:RTDB.IP21.Field	access:public	signature:()
RTDB.IP21.Field.Id	.\Field.cs	/^        public int Id$/;"	p	class:RTDB.IP21.Field	access:public
RTDB.IP21.Field.Name	.\Field.cs	/^        public string Name$/;"	p	class:RTDB.IP21.Field	access:public
RTDB.IP21.Field.buffer	.\Field.cs	/^        protected object buffer;$/;"	f	class:RTDB.IP21.Field	access:protected
RTDB.IP21.Field.bufferHandle	.\Field.cs	/^        private GCHandle bufferHandle;$/;"	f	class:RTDB.IP21.Field	file:	access:private
RTDB.IP21.Field.bufferSize	.\Field.cs	/^        protected int bufferSize;$/;"	f	class:RTDB.IP21.Field	access:protected
RTDB.IP21.Field.name	.\Field.cs	/^        private string name;$/;"	f	class:RTDB.IP21.Field	file:	access:private
RTDB.IP21.HistoryReader	.\HistoryReader.cs	/^    internal class HistoryReader$/;"	c	namespace:RTDB.IP21
RTDB.IP21.HistoryReader.ListAllHistory	.\HistoryReader.cs	/^        public static IList<TimeValuePair> ListAllHistory(int mode, string tag, DateTime time, int span)$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(int mode, string tag, DateTime time, int span)
RTDB.IP21.HistoryReader.ListHistoryData	.\HistoryReader.cs	/^        public static IList<TimeValuePair> ListHistoryData(int mode, string tag, DateTime time, int span, int maxOccus)$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(int mode, string tag, DateTime time, int span, int maxOccus)
RTDB.IP21.HistoryReader.ListHistoryDataByInterval	.\HistoryReader.cs	/^        public static IList<TimeValuePair> ListHistoryDataByInterval(string tag, DateTime timeOld, DateTime timeNew, int interval) {$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, int interval)
RTDB.IP21.HistoryReader.ListHistoryDataByInterval	.\HistoryReader.cs	/^        public static IList<TimeValuePair> ListHistoryDataByInterval(string tag, DateTime timeOld, DateTime timeNew, string IP21PeriodInterval)$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(string tag, DateTime timeOld, DateTime timeNew, string IP21PeriodInterval)
RTDB.IP21.HistoryReader.ReadActuals	.\HistoryReader.cs	/^        public static double ReadActuals(string tag, DateTime time, int span)$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(string tag, DateTime time, int span)
RTDB.IP21.HistoryReader.ReadInterpolated	.\HistoryReader.cs	/^        public static double ReadInterpolated(string tag, DateTime time)$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(string tag, DateTime time)
RTDB.IP21.IP21Exception	.\IP21Exception.cs	/^    public class IP21Exception : Exception$/;"	c	namespace:RTDB.IP21	inherits:Exception	access:public
RTDB.IP21.IP21Exception.Err1	.\IP21Exception.cs	/^        public long Err1$/;"	p	class:RTDB.IP21.IP21Exception	access:public
RTDB.IP21.IP21Exception.Err2	.\IP21Exception.cs	/^        public long Err2$/;"	p	class:RTDB.IP21.IP21Exception	access:public
RTDB.IP21.IP21Exception.ErrCode	.\IP21Exception.cs	/^        public short ErrCode$/;"	p	class:RTDB.IP21.IP21Exception	access:public
RTDB.IP21.IP21Exception.IP21Exception	.\IP21Exception.cs	/^        public IP21Exception(string msg) : base(msg)$/;"	m	class:RTDB.IP21.IP21Exception	access:public	signature:(string msg)
RTDB.IP21.IP21Exception.err1	.\IP21Exception.cs	/^        private long err1;$/;"	f	class:RTDB.IP21.IP21Exception	file:	access:private
RTDB.IP21.IP21Exception.err2	.\IP21Exception.cs	/^        private long err2;$/;"	f	class:RTDB.IP21.IP21Exception	file:	access:private
RTDB.IP21.IP21Exception.errCode	.\IP21Exception.cs	/^        private short errCode;$/;"	f	class:RTDB.IP21.IP21Exception	file:	access:private
RTDB.IP21.RtdbConnectionFactory	.\RtdbConnectionFactory.cs	/^    public class RtdbConnectionFactory {$/;"	c	namespace:RTDB.IP21	access:public
RTDB.IP21.RtdbConnectionFactory.CloseAllConnection	.\RtdbConnectionFactory.cs	/^        public void CloseAllConnection() {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	access:public	signature:()
RTDB.IP21.RtdbConnectionFactory.GetConnection	.\RtdbConnectionFactory.cs	/^        public Connection GetConnection() {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	access:public	signature:()
RTDB.IP21.RtdbConnectionFactory.GetConnection	.\RtdbConnectionFactory.cs	/^        public Connection GetConnection(string serverIp) {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	access:public	signature:(string serverIp)
RTDB.IP21.RtdbConnectionFactory.GetRtdbConnectionFactory	.\RtdbConnectionFactory.cs	/^        public static RtdbConnectionFactory GetRtdbConnectionFactory() {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	access:public	signature:()
RTDB.IP21.RtdbConnectionFactory.RtdbConnectionFactory	.\RtdbConnectionFactory.cs	/^        private RtdbConnectionFactory() {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private	signature:()
RTDB.IP21.RtdbConnectionFactory.TranslateConnString2Ip	.\RtdbConnectionFactory.cs	/^        private string TranslateConnString2Ip(string result) {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private	signature:(string result)
RTDB.IP21.RtdbConnectionFactory._rtdbConnectionFactory	.\RtdbConnectionFactory.cs	/^        private static RtdbConnectionFactory _rtdbConnectionFactory;$/;"	f	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private
RTDB.IP21.RtdbConnectionFactory.connStringIPMap	.\RtdbConnectionFactory.cs	/^        private static Dictionary<string, string> connStringIPMap = new Dictionary<string, string>();$/;"	f	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private
RTDB.IP21.RtdbConnectionFactory.connections	.\RtdbConnectionFactory.cs	/^        private static Dictionary<string, Connection> connections = new Dictionary<string, Connection>();$/;"	f	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private
RTDB.IP21.RtdbConnectionFactory.getServerIp	.\RtdbConnectionFactory.cs	/^        private string getServerIp() {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private	signature:()
RTDB.IP21.TimeAggreationPair	.\TimeAggreationPair.cs	/^    public class TimeAggreationPair {$/;"	c	namespace:RTDB.IP21	access:public
RTDB.IP21.TimeAggreationPair.AggreationData	.\TimeAggreationPair.cs	/^        public AggreationData AggreationData { get; set; }$/;"	p	class:RTDB.IP21.TimeAggreationPair	access:public
RTDB.IP21.TimeAggreationPair.Time	.\TimeAggreationPair.cs	/^        public DateTime Time { get; set; }$/;"	p	class:RTDB.IP21.TimeAggreationPair	access:public
RTDB.IP21.TimeAggreationPair.TimeAggreationPair	.\TimeAggreationPair.cs	/^        public TimeAggreationPair(DateTime time, AggreationData aggreationData) {$/;"	m	class:RTDB.IP21.TimeAggreationPair	access:public	signature:(DateTime time, AggreationData aggreationData)
RTDB.IP21.TimeField	.\TimeField.cs	/^    internal class TimeField : Field$/;"	c	namespace:RTDB.IP21	inherits:Field
RTDB.IP21.TimeField.AllocMyBuffer	.\TimeField.cs	/^        protected override object AllocMyBuffer()$/;"	m	class:RTDB.IP21.TimeField	access:protected	signature:()
RTDB.IP21.TimeField.DataAt	.\TimeField.cs	/^        public override object DataAt(int index)$/;"	m	class:RTDB.IP21.TimeField	access:public	signature:(int index)
RTDB.IP21.TimeField.DataType	.\TimeField.cs	/^        public override short DataType$/;"	p	class:RTDB.IP21.TimeField	access:public
RTDB.IP21.TimeField.TimeField	.\TimeField.cs	/^        public TimeField(string name)$/;"	m	class:RTDB.IP21.TimeField	access:public	signature:(string name)
RTDB.IP21.TimeValuePair	.\TimeValuePair.cs	/^    public class TimeValuePair$/;"	c	namespace:RTDB.IP21	access:public
RTDB.IP21.TimeValuePair.Time	.\TimeValuePair.cs	/^        public DateTime Time$/;"	p	class:RTDB.IP21.TimeValuePair	access:public
RTDB.IP21.TimeValuePair.TimeValuePair	.\TimeValuePair.cs	/^        public TimeValuePair()$/;"	m	class:RTDB.IP21.TimeValuePair	access:public	signature:()
RTDB.IP21.TimeValuePair.TimeValuePair	.\TimeValuePair.cs	/^        public TimeValuePair(DateTime time, double value)$/;"	m	class:RTDB.IP21.TimeValuePair	access:public	signature:(DateTime time, double value)
RTDB.IP21.TimeValuePair.Value	.\TimeValuePair.cs	/^        public double Value$/;"	p	class:RTDB.IP21.TimeValuePair	access:public
RTDB.IP21.TimeValuePair.time	.\TimeValuePair.cs	/^        private DateTime time;$/;"	f	class:RTDB.IP21.TimeValuePair	file:	access:private
RTDB.IP21.TimeValuePair.value	.\TimeValuePair.cs	/^        private double value;$/;"	f	class:RTDB.IP21.TimeValuePair	file:	access:private
RTDB.IP21.Util	.\Util.cs	/^    internal static class Util$/;"	c	namespace:RTDB.IP21
RTDB.IP21.Util.CheckResult	.\Util.cs	/^        public static void CheckResult(infoplus21_api.ERRBLOCK errMsg)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(infoplus21_api.ERRBLOCK errMsg)
RTDB.IP21.Util.ErrorMessage	.\Util.cs	/^        private static string ErrorMessage(infoplus21_api.ERRBLOCK errMsg)$/;"	m	class:RTDB.IP21.Util	file:	access:private	signature:(infoplus21_api.ERRBLOCK errMsg)
RTDB.IP21.Util.FieldId	.\Util.cs	/^        public static int FieldId(string fieldName)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(string fieldName)
RTDB.IP21.Util.TagId	.\Util.cs	/^        public static int TagId(string tagName)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(string tagName)
RTDB.IP21.Util.Time2XUSTS	.\Util.cs	/^        public static infoplus21_api.XUSTS Time2XUSTS(DateTime time)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(DateTime time)
RTDB.IP21.Util.XTSBLOCK2Time	.\Util.cs	/^        public static DateTime XTSBLOCK2Time(infoplus21_api.XTSBLOCK xts)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(infoplus21_api.XTSBLOCK xts)
RTDB.IP21.Util.XUTS2Time	.\Util.cs	/^        public static DateTime XUTS2Time(infoplus21_api.XUSTS xuts)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(infoplus21_api.XUSTS xuts)
RTDB.IP21.Util.getAspenIPfromPointReg	.\Util.cs	/^        public static string getAspenIPfromPointReg(string pointName)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(string pointName)
RTDB.IP21.Util.getPointSubstring	.\Util.cs	/^        public static string getPointSubstring(string pointName)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(string pointName)
RTDB.IP21.Util.writestr	.\Util.cs	/^        public static void writestr(string readme)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(string readme)
RTDB.IP21.infoplus21_api	.\infoplus21_api.cs	/^    internal static class infoplus21_api$/;"	c	namespace:RTDB.IP21
RTDB.IP21.infoplus21_api.AG_DBL_AVG	.\infoplus21_api.cs	/^        public const short AG_DBL_AVG  =   47 ;\/* average                                         *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_DBL_GOOD	.\infoplus21_api.cs	/^        public const short AG_DBL_GOOD  =  41 ;\/* good values                                     *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_DBL_MAX	.\infoplus21_api.cs	/^        public const short AG_DBL_MAX   =  44 ;\/* maximum                                         *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_DBL_MIN	.\infoplus21_api.cs	/^        public const short AG_DBL_MIN   =  43 ;\/* minimum                                         *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_DBL_NG	.\infoplus21_api.cs	/^        public const short AG_DBL_NG   =   42 ;\/* not good values                                 *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_DBL_RNG	.\infoplus21_api.cs	/^        public const short AG_DBL_RNG   =  45 ;\/* range                                           *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_DBL_STD	.\infoplus21_api.cs	/^        public const short AG_DBL_STD  =   49 ;\/* standard deviation                              *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_DBL_SUM	.\infoplus21_api.cs	/^        public const short AG_DBL_SUM  =   46 ;\/* sum                                             *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_DBL_VAR	.\infoplus21_api.cs	/^        public const short AG_DBL_VAR  =   48 ;\/* variance                                        *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_SHRT_QLEVEL	.\infoplus21_api.cs	/^        public const short AG_SHRT_QLEVEL = 81;\/* quality "level" for period                      *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_TIME_AFTER	.\infoplus21_api.cs	/^        public const short AG_TIME_AFTER = 24 ;\/* time after end of period (start of next period) *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_TIME_END	.\infoplus21_api.cs	/^        public const short AG_TIME_END   = 23 ;\/* time at end of period                           *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_TIME_MIDDLE	.\infoplus21_api.cs	/^        public const short AG_TIME_MIDDLE =22 ;\/* time at middle of period                        *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.AG_TIME_START	.\infoplus21_api.cs	/^        public const short AG_TIME_START = 21 ;\/\/* time at beginning of period                     *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.C_FALSE	.\infoplus21_api.cs	/^        public const int C_FALSE = 0; \/*false value for c*\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.C_TRUE	.\infoplus21_api.cs	/^        public const int C_TRUE = 1; \/* true value for c*\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.DB2CHBF	.\infoplus21_api.cs	/^        public static extern void DB2CHBF(int tagId, int propertyId,byte[] ptdbfr,int numbytes,out ERRBLOCK errMsg); $/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int tagId, int propertyId,byte[] ptdbfr,int numbytes,out ERRBLOCK errMsg)
RTDB.IP21.infoplus21_api.DB2REAL	.\infoplus21_api.cs	/^        public static extern void DB2REAL(int tagId, int propertyId, out float Value, out ERRBLOCK errMsg);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int tagId, int propertyId, out float Value, out ERRBLOCK errMsg)
RTDB.IP21.infoplus21_api.DB2XTIM	.\infoplus21_api.cs	/^        public static extern void DB2XTIM(int tagId, int propertyId, out XTSBLOCK xtsdata, out ERRBLOCK errMsg); $/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int tagId, int propertyId, out XTSBLOCK xtsdata, out ERRBLOCK errMsg)
RTDB.IP21.infoplus21_api.DECODFT	.\infoplus21_api.cs	/^        public static extern void DECODFT(byte[] property, short propertyLength, out int propertyId, out ERRBLOCK errMsg);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(byte[] property, short propertyLength, out int propertyId, out ERRBLOCK errMsg)
RTDB.IP21.infoplus21_api.DECODNAM	.\infoplus21_api.cs	/^        public static extern void DECODNAM(byte[] tag, short tagLength, out int tagId, out ERRBLOCK errMsg);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(byte[] tag, short tagLength, out int tagId, out ERRBLOCK errMsg)
RTDB.IP21.infoplus21_api.DTYPDUBL	.\infoplus21_api.cs	/^        public const int DTYPDUBL = -6;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.DTYPREAL	.\infoplus21_api.cs	/^        public const int DTYPREAL = -5;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.DTYPTIME	.\infoplus21_api.cs	/^        public const int DTYPTIME = -7;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.DTYPUSTS	.\infoplus21_api.cs	/^        public const int DTYPUSTS = -17; \/* Defined by XUSTS structure *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.DTYPXTIM	.\infoplus21_api.cs	/^        public const int DTYPXTIM = -8; \/* Defined by XTSBLOCK structure *\/$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.DaAddServer	.\infoplus21_api.cs	/^        public static extern int DaAddServer(byte[] constring, out ERRBLOCK errMsg);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(byte[] constring, out ERRBLOCK errMsg)
RTDB.IP21.infoplus21_api.DaInitialize	.\infoplus21_api.cs	/^        public static extern int DaInitialize(int login);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int login)
RTDB.IP21.infoplus21_api.DaSelectServer	.\infoplus21_api.cs	/^        public static extern int DaSelectServer(int ServerIndex, out ERRBLOCK ErrorBlock);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int ServerIndex, out ERRBLOCK ErrorBlock)
RTDB.IP21.infoplus21_api.DaShutdown	.\infoplus21_api.cs	/^        public static extern void DaShutdown();$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:()
RTDB.IP21.infoplus21_api.ERRBLOCK	.\infoplus21_api.cs	/^        public struct ERRBLOCK$/;"	s	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.ERRBLOCK.ERR1	.\infoplus21_api.cs	/^            public long ERR1;$/;"	f	struct:RTDB.IP21.infoplus21_api.ERRBLOCK	access:public
RTDB.IP21.infoplus21_api.ERRBLOCK.ERR2	.\infoplus21_api.cs	/^            public long ERR2;$/;"	f	struct:RTDB.IP21.infoplus21_api.ERRBLOCK	access:public
RTDB.IP21.infoplus21_api.ERRBLOCK.ERRCODE	.\infoplus21_api.cs	/^            public short ERRCODE;   \/* Error code returned by ACCESS routines *\/$/;"	f	struct:RTDB.IP21.infoplus21_api.ERRBLOCK	access:public
RTDB.IP21.infoplus21_api.ERRMESS	.\infoplus21_api.cs	/^        public static extern void ERRMESS(ref ERRBLOCK errMsg, byte[] err, out int errsz);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(ref ERRBLOCK errMsg, byte[] err, out int errsz)
RTDB.IP21.infoplus21_api.GETDBXTIM	.\infoplus21_api.cs	/^        public static extern void GETDBXTIM(out XTSBLOCK current_xts);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(out XTSBLOCK current_xts)
RTDB.IP21.infoplus21_api.H21_GET_ACTUALS	.\infoplus21_api.cs	/^        public const int H21_GET_ACTUALS = 4;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.H21_GET_ACTUALS_AND_CURRENT	.\infoplus21_api.cs	/^        public const int H21_GET_ACTUALS_AND_CURRENT = 5;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.H21_GET_BEST_FIT	.\infoplus21_api.cs	/^        public const int H21_GET_BEST_FIT = 3;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.H21_GET_TIMES	.\infoplus21_api.cs	/^        public const int H21_GET_TIMES = 1;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.H21_GET_TIMES2	.\infoplus21_api.cs	/^        public const int H21_GET_TIMES2 = 2;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.H21_GET_TIMES2_EXTENDED	.\infoplus21_api.cs	/^        public const int H21_GET_TIMES2_EXTENDED = 7;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.H21_GET_TIMES_EXTENDED	.\infoplus21_api.cs	/^        public const int H21_GET_TIMES_EXTENDED = 6;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.INISETC	.\infoplus21_api.cs	/^        public static extern bool INISETC();$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:()
RTDB.IP21.infoplus21_api.RHIS21AGGREG	.\infoplus21_api.cs	/^        public static extern void RHIS21AGGREG(int timeweight, int step, int recid, int ft, ref XUSTS ptTimeOld, ref XUSTS ptTimeNew, ref XUSTS ptInterval, int timealign, int dsadjust, int maxperiods, int numtimecodes, int numdoublecodes, int numshortcodes, short[] timecodes, short[] doublecodes, short[] shortcodes, IntPtr timevalues, IntPtr doublevalues, IntPtr shortvalues, out int numperiods, out ERRBLOCK err); $/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int timeweight, int step, int recid, int ft, ref XUSTS ptTimeOld, ref XUSTS ptTimeNew, ref XUSTS ptInterval, int timealign, int dsadjust, int maxperiods, int numtimecodes, int numdoublecodes, int numshortcodes, short[] timecodes, short[] doublecodes, short[] shortcodes, IntPtr timevalues, IntPtr doublevalues, IntPtr shortvalues, out int numperiods, out ERRBLOCK err)
RTDB.IP21.infoplus21_api.RHIS21DATA	.\infoplus21_api.cs	/^        public static extern void RHIS21DATA(int mode, int step, int outSiders, int tagId, int propertyId, ref XUSTS startTime, ref XUSTS endTime, int numfts, int[] fts, short[] datatypes, int maxoccus, int[] keylevels, XUSTS[] keyTimes, IntPtr[] ptdatas, out int occsok, out int ftsok, out ERRBLOCK errMsg);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(int mode, int step, int outSiders, int tagId, int propertyId, ref XUSTS startTime, ref XUSTS endTime, int numfts, int[] fts, short[] datatypes, int maxoccus, int[] keylevels, XUSTS[] keyTimes, IntPtr[] ptdatas, out int occsok, out int ftsok, out ERRBLOCK errMsg)
RTDB.IP21.infoplus21_api.SUCCESS	.\infoplus21_api.cs	/^        public const int SUCCESS = 0;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.XTS2XUST	.\infoplus21_api.cs	/^        public static extern void XTS2XUST(ref XTSBLOCK xts, out XUSTS xusts);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(ref XTSBLOCK xts, out XUSTS xusts)
RTDB.IP21.infoplus21_api.XTSBLOCK	.\infoplus21_api.cs	/^        public struct XTSBLOCK$/;"	s	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.XTSBLOCK.XTSFAST	.\infoplus21_api.cs	/^            public int XTSFAST;    \/* seconds since EPOCH (January 1, 1970 GMT) *\/$/;"	f	struct:RTDB.IP21.infoplus21_api.XTSBLOCK	access:public
RTDB.IP21.infoplus21_api.XTSBLOCK.XTSSLOW	.\infoplus21_api.cs	/^            public int XTSSLOW;   \/* microseconds in the second *\/$/;"	f	struct:RTDB.IP21.infoplus21_api.XTSBLOCK	access:public
RTDB.IP21.infoplus21_api.XUSTS	.\infoplus21_api.cs	/^        public struct XUSTS$/;"	s	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.XUSTS.secs	.\infoplus21_api.cs	/^            public int secs;    \/* seconds since EPOCH (January 1, 1970 GMT) *\/$/;"	f	struct:RTDB.IP21.infoplus21_api.XUSTS	access:public
RTDB.IP21.infoplus21_api.XUSTS.usecs	.\infoplus21_api.cs	/^            public int usecs;   \/* microseconds in the second *\/$/;"	f	struct:RTDB.IP21.infoplus21_api.XUSTS	access:public
RTDB.IP21.infoplus21_api.outsiders	.\infoplus21_api.cs	/^        public const int outsiders = 0;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.step	.\infoplus21_api.cs	/^        public const int step = 0;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB.IP21.infoplus21_api.timeweight	.\infoplus21_api.cs	/^        public const int timeweight = 0;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
RTDB_REFRESH_STEP	.\AggreationReader.cs	/^        private const int RTDB_REFRESH_STEP = 15;$/;"	f	class:RTDB.IP21.AggreationReader	file:	access:private
ReadActuals	.\HistoryReader.cs	/^        public static double ReadActuals(string tag, DateTime time, int span)$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(string tag, DateTime time, int span)
ReadInterpolated	.\HistoryReader.cs	/^        public static double ReadInterpolated(string tag, DateTime time)$/;"	m	class:RTDB.IP21.HistoryReader	access:public	signature:(string tag, DateTime time)
RtdbConnectionFactory	.\RtdbConnectionFactory.cs	/^        private RtdbConnectionFactory() {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private	signature:()
RtdbConnectionFactory	.\RtdbConnectionFactory.cs	/^    public class RtdbConnectionFactory {$/;"	c	namespace:RTDB.IP21	access:public
SHORT	.\AggregatedData.cs	/^        public enum Type {DOUBLE, TIME, SHORT};$/;"	e	enum:RTDB.IP21.AggregatedData.Type	file:
SUCCESS	.\infoplus21_api.cs	/^        public const int SUCCESS = 0;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
ServerIndex	.\Connection.cs	/^        public int ServerIndex$/;"	p	class:RTDB.IP21.Connection	access:public
Sum	.\AggreationData.cs	/^        public double Sum { get; set; }$/;"	p	class:RTDB.IP21.AggreationData	access:public
SwitchToServerIp	.\Connection.cs	/^        private bool SwitchToServerIp() {$/;"	m	class:RTDB.IP21.Connection	file:	access:private	signature:()
TIME	.\AggregatedData.cs	/^        public enum Type {DOUBLE, TIME, SHORT};$/;"	e	enum:RTDB.IP21.AggregatedData.Type	file:
TagId	.\Util.cs	/^        public static int TagId(string tagName)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(string tagName)
Time	.\TimeAggreationPair.cs	/^        public DateTime Time { get; set; }$/;"	p	class:RTDB.IP21.TimeAggreationPair	access:public
Time	.\TimeValuePair.cs	/^        public DateTime Time$/;"	p	class:RTDB.IP21.TimeValuePair	access:public
Time2XUSTS	.\Util.cs	/^        public static infoplus21_api.XUSTS Time2XUSTS(DateTime time)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(DateTime time)
TimeAggreationPair	.\TimeAggreationPair.cs	/^        public TimeAggreationPair(DateTime time, AggreationData aggreationData) {$/;"	m	class:RTDB.IP21.TimeAggreationPair	access:public	signature:(DateTime time, AggreationData aggreationData)
TimeAggreationPair	.\TimeAggreationPair.cs	/^    public class TimeAggreationPair {$/;"	c	namespace:RTDB.IP21	access:public
TimeField	.\TimeField.cs	/^        public TimeField(string name)$/;"	m	class:RTDB.IP21.TimeField	access:public	signature:(string name)
TimeField	.\TimeField.cs	/^    internal class TimeField : Field$/;"	c	namespace:RTDB.IP21	inherits:Field
TimeValuePair	.\TimeValuePair.cs	/^        public TimeValuePair()$/;"	m	class:RTDB.IP21.TimeValuePair	access:public	signature:()
TimeValuePair	.\TimeValuePair.cs	/^        public TimeValuePair(DateTime time, double value)$/;"	m	class:RTDB.IP21.TimeValuePair	access:public	signature:(DateTime time, double value)
TimeValuePair	.\TimeValuePair.cs	/^    public class TimeValuePair$/;"	c	namespace:RTDB.IP21	access:public
TranslateConnString2Ip	.\RtdbConnectionFactory.cs	/^        private string TranslateConnString2Ip(string result) {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private	signature:(string result)
Type	.\AggregatedData.cs	/^        public enum Type {DOUBLE, TIME, SHORT};$/;"	g	class:RTDB.IP21.AggregatedData	access:public
Util	.\Util.cs	/^    internal static class Util$/;"	c	namespace:RTDB.IP21
Value	.\TimeValuePair.cs	/^        public double Value$/;"	p	class:RTDB.IP21.TimeValuePair	access:public
XTS2XUST	.\infoplus21_api.cs	/^        public static extern void XTS2XUST(ref XTSBLOCK xts, out XUSTS xusts);$/;"	m	class:RTDB.IP21.infoplus21_api	file:	access:private	signature:(ref XTSBLOCK xts, out XUSTS xusts)
XTSBLOCK	.\infoplus21_api.cs	/^        public struct XTSBLOCK$/;"	s	class:RTDB.IP21.infoplus21_api	access:public
XTSBLOCK2Time	.\Util.cs	/^        public static DateTime XTSBLOCK2Time(infoplus21_api.XTSBLOCK xts)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(infoplus21_api.XTSBLOCK xts)
XTSFAST	.\infoplus21_api.cs	/^            public int XTSFAST;    \/* seconds since EPOCH (January 1, 1970 GMT) *\/$/;"	f	struct:RTDB.IP21.infoplus21_api.XTSBLOCK	access:public
XTSSLOW	.\infoplus21_api.cs	/^            public int XTSSLOW;   \/* microseconds in the second *\/$/;"	f	struct:RTDB.IP21.infoplus21_api.XTSBLOCK	access:public
XUSTS	.\infoplus21_api.cs	/^        public struct XUSTS$/;"	s	class:RTDB.IP21.infoplus21_api	access:public
XUTS2Time	.\Util.cs	/^        public static DateTime XUTS2Time(infoplus21_api.XUSTS xuts)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(infoplus21_api.XUSTS xuts)
_rtdbConnectionFactory	.\RtdbConnectionFactory.cs	/^        private static RtdbConnectionFactory _rtdbConnectionFactory;$/;"	f	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private
buffer	.\AggregatedData.cs	/^        protected object buffer;$/;"	f	class:RTDB.IP21.AggregatedData	access:protected
buffer	.\Field.cs	/^        protected object buffer;$/;"	f	class:RTDB.IP21.Field	access:protected
bufferHandle	.\AggregatedData.cs	/^        private GCHandle bufferHandle;$/;"	f	class:RTDB.IP21.AggregatedData	file:	access:private
bufferHandle	.\Field.cs	/^        private GCHandle bufferHandle;$/;"	f	class:RTDB.IP21.Field	file:	access:private
bufferSize	.\Field.cs	/^        protected int bufferSize;$/;"	f	class:RTDB.IP21.Field	access:protected
codes	.\AggregatedData.cs	/^        private short[] codes;$/;"	f	class:RTDB.IP21.AggregatedData	file:	access:private
connStringIPMap	.\RtdbConnectionFactory.cs	/^        private static Dictionary<string, string> connStringIPMap = new Dictionary<string, string>();$/;"	f	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private
connections	.\RtdbConnectionFactory.cs	/^        private static Dictionary<string, Connection> connections = new Dictionary<string, Connection>();$/;"	f	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private
currentServerIp	.\Connection.cs	/^        private static string currentServerIp;$/;"	f	class:RTDB.IP21.Connection	file:	access:private
err1	.\IP21Exception.cs	/^        private long err1;$/;"	f	class:RTDB.IP21.IP21Exception	file:	access:private
err2	.\IP21Exception.cs	/^        private long err2;$/;"	f	class:RTDB.IP21.IP21Exception	file:	access:private
errCode	.\IP21Exception.cs	/^        private short errCode;$/;"	f	class:RTDB.IP21.IP21Exception	file:	access:private
getAspenIPfromPointReg	.\Util.cs	/^        public static string getAspenIPfromPointReg(string pointName)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(string pointName)
getPointSubstring	.\Util.cs	/^        public static string getPointSubstring(string pointName)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(string pointName)
getServerIp	.\RtdbConnectionFactory.cs	/^        private string getServerIp() {$/;"	m	class:RTDB.IP21.RtdbConnectionFactory	file:	access:private	signature:()
infoplus21_api	.\infoplus21_api.cs	/^    internal static class infoplus21_api$/;"	c	namespace:RTDB.IP21
maxPeriods	.\AggregatedData.cs	/^        private int maxPeriods;$/;"	f	class:RTDB.IP21.AggregatedData	file:	access:private
name	.\Field.cs	/^        private string name;$/;"	f	class:RTDB.IP21.Field	file:	access:private
outsiders	.\infoplus21_api.cs	/^        public const int outsiders = 0;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
secs	.\infoplus21_api.cs	/^            public int secs;    \/* seconds since EPOCH (January 1, 1970 GMT) *\/$/;"	f	struct:RTDB.IP21.infoplus21_api.XUSTS	access:public
serverGroup	.\Connection.cs	/^        public static string serverGroup = "200";$/;"	f	class:RTDB.IP21.Connection	access:public
serverIndex	.\Connection.cs	/^        private int serverIndex;$/;"	f	class:RTDB.IP21.Connection	file:	access:private
serverIp	.\Connection.cs	/^        private string serverIp;$/;"	f	class:RTDB.IP21.Connection	file:	access:private
serverPool	.\Connection.cs	/^        private static Dictionary<string, int> serverPool = new Dictionary<string, int>();$/;"	f	class:RTDB.IP21.Connection	file:	access:private
step	.\infoplus21_api.cs	/^        public const int step = 0;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
time	.\TimeValuePair.cs	/^        private DateTime time;$/;"	f	class:RTDB.IP21.TimeValuePair	file:	access:private
timeweight	.\infoplus21_api.cs	/^        public const int timeweight = 0;$/;"	f	class:RTDB.IP21.infoplus21_api	access:public
usecs	.\infoplus21_api.cs	/^            public int usecs;   \/* microseconds in the second *\/$/;"	f	struct:RTDB.IP21.infoplus21_api.XUSTS	access:public
value	.\TimeValuePair.cs	/^        private double value;$/;"	f	class:RTDB.IP21.TimeValuePair	file:	access:private
writestr	.\Util.cs	/^        public static void writestr(string readme)$/;"	m	class:RTDB.IP21.Util	access:public	signature:(string readme)
